* Inbox
** TODO feature scope to tracing and have a non debug trait method as well

[[file:~/Code/tixlys/tixlys-core/crates/cqrs/src/bus/message_sender.rs::\[instrument(skip(self))\]]]
** TODO create lock free, doubly linked list

[[file:~/Code/tixlys/tixlys-core/bins/events/src/cache.rs::fn put(&mut self, data: C) -> Result<C, Error>;]]
** TODO create a type which ensures that there is something called aggregate_id in commands

[[file:~/Code/tixlys/tixlys-core/bins/events/src/main.rs::let result = command_executor.clone().execute(Command::CreateEvent).await;]]
** TODO pass event repository to command handler, with aggregate id

[[file:~/Code/tixlys/tixlys-core/bins/events/src/commander.rs::// TODO: execute a tower service which takes this command as request and the response is sent back as response]]
** TODO Commander should take event repository, which is scoped to a particular aggregator to load

[[file:~/Code/tixlys/tixlys-core/bins/events/src/commander.rs::debug!("initializing channel between commander and the application");]]
** TODO add ability to take aggregate id, when you execute a function

[[file:~/Code/tixlys/tixlys-core/bins/events/src/main.rs::let result = command_executor.clone().execute(Command::CreateEvent).await;]]
p
